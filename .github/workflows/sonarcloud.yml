name: SonarCloud Analysis

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    permissions:
      contents: read
      pull-requests: read
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov bandit
          if [ -f API/requirements-dev.txt ]; then pip install -r API/requirements-dev.txt; fi
          if [ -f API/requirements.txt ]; then pip install -r API/requirements.txt; fi

      - name: Run tests with coverage
        env:
          DATABASE_URL: sqlite:///test.db
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest --cov=. --cov-report=xml --cov-report=term-missing --junitxml=test-results.xml

      - name: Run Bandit security analysis
        run: |
          bandit -r . -ll -f json -o bandit-report.json || true

      - name: Fix coverage report paths
        run: |
          if [ -f coverage.xml ]; then
            sed -i 's|<source>.*</source>|<source>.</source>|g' coverage.xml
            sed -i 's|filename="|filename="|g' coverage.xml
          fi

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: env.SONAR_TOKEN != ''
        with:
          args: >
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.python.xunit.reportPath=test-results.xml
            -Dsonar.python.bandit.reportPaths=bandit-report.json
            -Dsonar.sources=.
            -Dsonar.tests=tests/
            -Dsonar.projectKey=Dino-pit-studios-llc_DinoAir3
            -Dsonar.organization=dino-pit-studios-llc
            -Dsonar.python.version=3.11
            -Dsonar.qualitygate.wait=true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage.xml
            test-results.xml
            bandit-report.json